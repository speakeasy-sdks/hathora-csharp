///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace hathora.Models.Apps;
using hathora.Utils;
using hathora.Models.Shared;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Net.Http;
using System.Text;

public class CreateAppRequestBody
{
    [JsonProperty("appName")]
    public string AppName { get; set; }
    
    [JsonProperty("authConfiguration")]
    public CreateAppRequestBodyAuthConfiguration AuthConfiguration { get; set; }
    
    internal static HttpRequestMessage BuildHttpRequestMessage(string operationId, CreateAppRequestBody value)
    {
        if("CreateApp" == operationId)
        {
            var message = new HttpRequestMessage(HttpMethod.Post, "/apps/v1/create");

            string json = JsonConvert.SerializeObject(value);
            message.Content = new StringContent(json, Encoding.UTF8, "application/json");
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [CreateAppRequestBody]");
    }
}
