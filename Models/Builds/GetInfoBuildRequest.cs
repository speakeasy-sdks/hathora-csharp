///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace SDK.Models.Builds;
using SDK.Utils;
using SDK.Models.Shared;
using Newtonsoft.Json;
using Newtonsoft.Json.Linq;
using System.Net;
using System.Net.Http;
using System.Text;

public class GetInfoBuildRequest
{
    [JsonProperty("appId")]
    public string AppId { get; set; }
    
    [JsonProperty("buildId")]
    public float BuildId { get; set; }
    
    internal static HttpRequestMessage BuildHttpRequestMessage(string operationId, GetInfoBuildRequest value)
    {
        if("GetInfoBuild" == operationId)
        {
            // add path params
            
            var appId = PathParamSerializer.Serialize("simple", false, value.AppId);
            
            var buildId = PathParamSerializer.Serialize("simple", false, value.BuildId);
            var message = new HttpRequestMessage(HttpMethod.Get, $"/builds/v1/{appId}/info/{buildId}");
            return message;
        }
        throw new ArgumentException($"Attempt to build HttpRequestMessage for invalid operationId [{operationId}] for request type [GetInfoBuildRequest]");
    }
}
