///
 /// Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 ///

namespace SDK;
using System.Collections.Generic;
using System.Text;
using SDK.Apps;
using SDK.Auth;
using SDK.Builds;
using SDK.Deployment;
using SDK.Discovery;
using SDK.Lobbies;
using SDK.Logs;
using SDK.Metrics;
using SDK.Processes;
using SDK.Rooms;
using System.Net.Http;
using SDK.Models.Security;
using SDK.Utils;

public interface ISDKSDK
{
    public IAppsSDK Apps { get; }
    public IAuthSDK Auth { get; }
    public IBuildsSDK Builds { get; }
    public IDeploymentSDK Deployment { get; }
    public IDiscoverySDK Discovery { get; }
    public ILobbiesSDK Lobbies { get; }
    public ILogsSDK Logs { get; }
    public IMetricsSDK Metrics { get; }
    public IProcessesSDK Processes { get; }
    public IRoomsSDK Rooms { get; }
}

public class SDKSDK: ISDKSDK
{
    public static List<string> ServerList = new List<string>()
    {
        "https://api.hathora.dev",
        "/",
    };

    private const string language = "csharp";
    private const string sdkVersion = "0.0.1";
    private const string sdkGenVersion = "internal";
    public Uri ServerUrl { get { return _defaultClient.BaseAddress; } }
    private HttpClient _defaultClient;
    private HttpClient _securityClient;
    public IAppsSDK Apps { get; private set; }
    public IAuthSDK Auth { get; private set; }
    public IBuildsSDK Builds { get; private set; }
    public IDeploymentSDK Deployment { get; private set; }
    public IDiscoverySDK Discovery { get; private set; }
    public ILobbiesSDK Lobbies { get; private set; }
    public ILogsSDK Logs { get; private set; }
    public IMetricsSDK Metrics { get; private set; }
    public IProcessesSDK Processes { get; private set; }
    public IRoomsSDK Rooms { get; private set; }

    public SDKSDK(HttpClient? client = null, string? serverUrl = null, Security? security = null)
    {
        _defaultClient = client;
        if(_defaultClient == null)
        {
            _defaultClient = new HttpClient();
            var _serverUrl = serverUrl ?? SDKSDK.ServerList[0];

            _defaultClient.BaseAddress = new System.Uri(_serverUrl);
        }
        _securityClient = _defaultClient;
        if(security != null)
        {
throw new NotImplementedException();
        }
        Apps = new AppsSDK(_defaultClient, _securityClient);
        Auth = new AuthSDK(_defaultClient, _securityClient);
        Builds = new BuildsSDK(_defaultClient, _securityClient);
        Deployment = new DeploymentSDK(_defaultClient, _securityClient);
        Discovery = new DiscoverySDK(_defaultClient, _securityClient);
        Lobbies = new LobbiesSDK(_defaultClient, _securityClient);
        Logs = new LogsSDK(_defaultClient, _securityClient);
        Metrics = new MetricsSDK(_defaultClient, _securityClient);
        Processes = new ProcessesSDK(_defaultClient, _securityClient);
        Rooms = new RoomsSDK(_defaultClient, _securityClient);
    }
}